









































 





 




 



 






 








 
































































 








 




 

typedef uint8 llStatus_t;


typedef struct
{
  uint16 numPkts[ 37 ];
  uint16 numCrcErr[ 37 ];
} perByChan_t;



 



 



 

















 
extern void LL_Init( uint8 taskId );

















 
extern uint16 LL_ProcessEvent( uint8 task_id, uint16 events );




 
















 
extern llStatus_t LL_Reset( void );



















 
extern llStatus_t LL_ReadBDADDR( uint8 *bdAddr );




















 
extern llStatus_t LL_SetRandomAddress( uint8 *devAddr );




















 
extern llStatus_t LL_ClearWhiteList( void );



















 
extern llStatus_t LL_AddWhiteListDevice( uint8 *devAddr,
                                         uint8 addrType );



















 
extern llStatus_t LL_RemoveWhiteListDevice( uint8 *devAddr,
                                            uint8 addrType );

















 
extern llStatus_t LL_ReadWlSize( uint8 *numEntries );

















 
extern llStatus_t LL_NumEmptyWlEntries( uint8 *numEmptyEntries );























 
extern llStatus_t LL_Encrypt( uint8 *key,
                              uint8 *plaintextData,
                              uint8 *encryptedData );
























 
extern llStatus_t LL_Rand( uint8 *randData,
                           uint8 dataLen );

















 
extern llStatus_t LL_ReadSupportedStates( uint8 *states );




















 
extern llStatus_t LL_ReadLocalSupportedFeatures( uint8 *featureSet );





















 
extern llStatus_t LL_ReadLocalVersionInfo( uint8  *verNum,
                                           uint16 *comId,
                                           uint16 *subverNum );































 
extern llStatus_t LL_ReadRssi( uint16 connId,
                               int8   *lastRssi );





























 
extern llStatus_t LL_DirectTestTxTest( uint8 txFreq,
                                       uint8 payloadLen,
                                       uint8 payloadType );























 
extern llStatus_t LL_DirectTestRxTest( uint8 rxFreq );






















 
extern llStatus_t LL_DirectTestEnd( void );




































 















 
extern llStatus_t LL_EXT_SetRxGain( uint8 rxGain,
                                    uint8 *cmdComplete );
















 
extern llStatus_t LL_EXT_SetTxPower( uint8 txPower,
                                     uint8 *cmdComplete );






















 
extern llStatus_t LL_EXT_ClkDivOnHalt( uint8 control );



















 
extern llStatus_t LL_EXT_DeclareNvUsage( uint8 mode );























 
extern llStatus_t LL_EXT_Decrypt( uint8 *key,
                                  uint8 *encryptedData,
                                  uint8 *plaintextData );






















 
extern llStatus_t LL_EXT_SetLocalSupportedFeatures( uint8 *featureSet );





























 
extern llStatus_t LL_EXT_ModemTestTx( uint8 cwMode,
                                      uint8 txFreq );


























 
extern llStatus_t LL_EXT_ModemHopTestTx( void );


























 
extern llStatus_t LL_EXT_ModemTestRx( uint8 rxFreq );

















 
extern llStatus_t LL_EXT_EndModemTest( void );






















 
extern llStatus_t LL_EXT_SetBDADDR( uint8 *bdAddr );






















 
extern llStatus_t LL_EXT_SetFreqTune( uint8 step );



















 
extern llStatus_t LL_EXT_SaveFreqTune( void );




















 
extern llStatus_t LL_EXT_SetMaxDtmTxPower( uint8 txPower );





















































 
extern llStatus_t LL_EXT_MapPmIoPort( uint8 ioPort, uint8 ioPin );























 
extern llStatus_t LL_EXT_ExtendRfRange( uint8 *cmdComplete );


















 
extern llStatus_t LL_EXT_HaltDuringRf( uint8 mode );








 




































 
extern void LL_DirectTestEndDoneCback( uint16 numPackets,
                                       uint8  mode );

























 
extern void LL_RandCback( uint8 *randData );

















 
extern void LL_EXT_SetRxGainCback( void );

















 
extern void LL_EXT_SetTxPowerCback( void );























 
extern void LL_EXT_PacketErrorRateCback( uint16 numPkts,
                                         uint16 numCrcErr,
                                         uint16 numEvents,
                                         uint16 numMissedEvts );

















 
extern void LL_EXT_ExtendRfRangeCback( void );




